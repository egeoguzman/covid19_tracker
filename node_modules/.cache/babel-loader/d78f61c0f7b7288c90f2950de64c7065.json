{"ast":null,"code":"import _regeneratorRuntime from\"/Users/egeoguzman/Desktop/covid-19_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/egeoguzman/Desktop/covid-19_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';var url='https://covid19.mathdro.id/api';export var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$axios$get,_yield$axios$get$data,confirmed,recovered,deaths,lastUpdate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(url);case 3:_yield$axios$get=_context.sent;_yield$axios$get$data=_yield$axios$get.data;confirmed=_yield$axios$get$data.confirmed;recovered=_yield$axios$get$data.recovered;deaths=_yield$axios$get$data.deaths;lastUpdate=_yield$axios$get$data.lastUpdate;return _context.abrupt(\"return\",{confirmed:confirmed,recovered:recovered,deaths:deaths,lastUpdate:lastUpdate});case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,12]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();export var fetchDailyData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$axios$get2,data,modifiedData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(\"\".concat(url,\"/daily\"));case 3:_yield$axios$get2=_context2.sent;data=_yield$axios$get2.data;modifiedData=data.map(function(dailyData){return{confirmed:dailyData.confirmed.total,deaths:dailyData.deaths.total,date:dailyData.reportDate};});return _context2.abrupt(\"return\",modifiedData);case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function fetchDailyData(){return _ref2.apply(this,arguments);};}();export var fetchCountries=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _yield$axios$get3,countries;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axios.get(\"\".concat(url,\"/countries\"));case 3:_yield$axios$get3=_context3.sent;countries=_yield$axios$get3.data.countries;return _context3.abrupt(\"return\",fetchCountries.map(function(country){return country.name;}));case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function fetchCountries(){return _ref3.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/egeoguzman/Desktop/covid-19_tracker/src/api/index.js"],"names":["axios","url","fetchData","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","country","name"],"mappings":"+TAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAG,gCAAZ,CAEA,MAAO,IAAMC,CAAAA,SAAS,0FAAG,0PAE6CF,CAAAA,KAAK,CAACG,GAAN,CAAUF,GAAV,CAF7C,8EAEVG,IAFU,CAEHC,SAFG,uBAEHA,SAFG,CAEOC,SAFP,uBAEOA,SAFP,CAEiBC,MAFjB,uBAEiBA,MAFjB,CAEwBC,UAFxB,uBAEwBA,UAFxB,iCAIV,CAACH,SAAS,CAATA,SAAD,CAAWC,SAAS,CAATA,SAAX,CAAqBC,MAAM,CAANA,MAArB,CAA4BC,UAAU,CAAVA,UAA5B,CAJU,iIAAH,kBAATN,CAAAA,SAAS,0CAAf,CAUP,MAAO,IAAMO,CAAAA,cAAc,2FAAG,wNAEDT,CAAAA,KAAK,CAACG,GAAN,WAAaF,GAAb,WAFC,yCAEfG,IAFe,mBAEfA,IAFe,CAGhBM,YAHgB,CAGDN,IAAI,CAACO,GAAL,CAAS,SAAEC,SAAF,QAAiB,CAC3CP,SAAS,CAAEO,SAAS,CAACP,SAAV,CAAoBQ,KADY,CAE3CN,MAAM,CAAEK,SAAS,CAACL,MAAV,CAAiBM,KAFkB,CAG3CC,IAAI,CAAEF,SAAS,CAACG,UAH2B,CAAjB,EAAT,CAHC,kCAQfL,YARe,mIAAH,kBAAdD,CAAAA,cAAc,2CAApB,CAeP,MAAO,IAAMO,CAAAA,cAAc,2FAAG,gNAEYhB,CAAAA,KAAK,CAACG,GAAN,WAAaF,GAAb,eAFZ,yCAERgB,SAFQ,mBAEfb,IAFe,CAERa,SAFQ,kCAGfD,cAAc,CAACL,GAAf,CAAmB,SAACO,OAAD,QAAaA,CAAAA,OAAO,CAACC,IAArB,EAAnB,CAHe,mIAAH,kBAAdH,CAAAA,cAAc,2CAApB","sourcesContent":["import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async () => {\n    try {\n        const {data: {confirmed,recovered,deaths,lastUpdate}} = await axios.get(url);\n    \n        return {confirmed,recovered,deaths,lastUpdate};\n    } catch (error) {\n        \n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const {data} = await axios.get(`${url}/daily`);\n        const modifiedData = data.map(( dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n        return modifiedData\n        \n    } catch (error) {\n        \n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const {data: {countries}} = await axios.get(`${url}/countries`)\n        return fetchCountries.map((country) => country.name);\n    } catch (error) {\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}